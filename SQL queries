-- Business Problem Q1: Find different payment methods, number of transactions, and quantity sold by payment method
SELECT 
    payment_method,
    COUNT(*) AS no_of_payments,
    SUM(quantity) AS no_qty_sold
FROM walmart
GROUP BY payment_method;


-- Project Question #2: Identify the highest-rated category in each branch
-- Display the branch, category, and avg rating
SELECT branch, category, avg_rating
FROM (
    SELECT 
        branch,
        category,
        AVG(rating) AS avg_rating,
        RANK() OVER(PARTITION BY branch ORDER BY AVG(rating) DESC) AS rankk
    FROM walmart
    GROUP BY branch, category
) AS ranked
WHERE rankk = 1;


-- Q3: Identify the busiest day for each branch based on the number of transactions
SELECT branch, day_name, no_transactions
FROM (
    SELECT 
        branch,
        DAYNAME(STR_TO_DATE(date, '%d-%m-%Y')) AS day_name,
        COUNT(*) AS no_transactions,
        RANK() OVER(PARTITION BY branch ORDER BY COUNT(*) DESC) AS rankk
    FROM walmart
    GROUP BY branch, day_name
) AS ranked
WHERE rankk = 1;


-- Q4: Calculate the total quantity of items sold per payment method
select sum(quantity) as qty_sold, payment_method
from walmart
group by payment_method;


-- Q5: Determine the average, minimum, and maximum rating of categories for each city
select city, category, avg(rating) as avg_rating, min(rating) as min_rating, max(rating) as max_rating 
from walmart
group by city, category;


-- Q6: Calculate the total profit for each category

select category, sum(total * profit_margin) as total_profit,
sum(total) as total_revenue
from walmart
group by category
order by total_profit desc; 


-- Q7: Determine the most common payment method for each branch
with cte
as 
(
select branch, payment_method, count(*) as total_trans,
rank() over(partition by branch order by count(*) desc) as rankk
from walmart
group by branch, payment_method
)
select * 
from cte
where rankk = 1;


-- Q8: Categorize sales into Morning, Afternoon, and Evening shifts

select branch,
case
when hour(TIME(time))<12 then 'Morning'
when hour(TIME(time)) between 12 and 17 then 'Afternoon'
else 'Evening'
end as Shift,
count(*) as num_invoices
from walmart
group by branch, shift
order by branch, num_invoices desc;


-- Q9: Identify the 5 branches with the highest revenue decrease ratio from last year to current year (e.g., 2022 to 2023)

WITH revenue_2022 AS (
    SELECT 
        branch,
        SUM(total) AS revenue
    FROM walmart
    WHERE YEAR(STR_TO_DATE(date, '%d-%m-%Y')) = 2022
    GROUP BY branch
),
revenue_2023 AS (
    SELECT 
        branch,
        SUM(total) AS revenue
    FROM walmart
    WHERE YEAR(STR_TO_DATE(date, '%d-%m-%Y')) = 2023
    GROUP BY branch
)
SELECT 
    r2022.branch,
    r2022.revenue AS last_year_revenue,
    r2023.revenue AS current_year_revenue,
    ROUND(((r2022.revenue - r2023.revenue) / r2022.revenue) * 100, 2) AS revenue_decrease_ratio
FROM revenue_2022 AS r2022
JOIN revenue_2023 AS r2023 ON r2022.branch = r2023.branch
WHERE r2022.revenue > r2023.revenue
ORDER BY revenue_decrease_ratio DESC
LIMIT 5;
